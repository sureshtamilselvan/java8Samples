In Java, Lambda expressions basically express instances of functional interfaces (An interface with 
a single abstract method is called a functional interface). Lambda Expressions in Java are the same
 as lambda functions which are the short block of code that accepts input as parameters and returns 
 a resultant value. Lambda Expressions are recently included in Java SE 8. 

Functionalities of Lambda Expression in Java
Lambda Expressions implement the only abstract function and therefore implement functional
 interfaces lambda expressions are added in Java 8 and provide the below functionalities.

Enable to treat functionality as a method argument, or code as data.
A function that can be created without belonging to any class.
A lambda expression can be passed around as if it was an object and executed on demand.


Q1. What type of lambda expression Java?
Answer:

Java Lambda Expressions are the short block of code that accepts input as parameters and returns a resultant value.

Q2. Is it good to use lambda expressions in Java?
Answer:

Yes, using lambda expressions makes it easier to use and support other APIs.

Q3. What are the drawbacks of Java lambda?
Answer:

Java lambda functions can be only used with functional interfaces.